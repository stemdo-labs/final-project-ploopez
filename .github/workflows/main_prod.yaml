name: 4.2 CI/CD for Pull Requests to Main

on:
  pull_request:
    branches:
      - main
    types:
      - closed


jobs:

  ci_prod:
    name: Run CI Workflow for Prod
    uses: ./.github/workflows/ci.yml
    with:
      branch: main
      environment: production
    secrets: inherit
          
  cd_prod:
    name: Run CD Workflow for Prod
    needs: ci_prod
    uses: ./.github/workflows/cd-deploy-aks.yml
    with:
      version: ${{ needs.ci_prod.outputs.version }}
      repository: ${{ needs.ci_prod.outputs.repository }}
      environment: production
    secrets: inherit
          
  update_version:
    needs: cd_prod
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4


      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Delete develop branch
        run: |
          run: git push origin --delete develop || true

      - name: Recreate develop branch from main
        run: |
          git fetch origin
          git checkout main
          git pull origin main
          # Verifica si la rama develop existe en remoto y cambia a ella, si no, la crea a partir de main
          if git rev-parse --verify origin/develop; then
            git checkout develop
            git pull origin develop
          else
            git checkout -b develop
          fi
          git push origin develop --force
      
      - name: Checkout develop branch
        uses: actions/checkout@v4
        with:
          ref: develop
      
      - name: Display current version
        run: |
          echo "Current version:"
          jq -r .version aplicativo/aplicativoNuevo/composer.json
          
      - name: Update version in composer.json and commit changes
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config --global user.email "plopez@stemdo.io"
          git config --global user.name "ploopez"
          version=$(jq -r .version aplicativo/aplicativoNuevo/composer.json)
          new_version=$(echo $version | awk -F. -v OFS=. '{$NF += 1 ; print}')
          echo "Updating version from $version to $new_version"
          jq ".version = \"$new_version\"" aplicativo/aplicativoNuevo/composer.json > temp.json
          mv temp.json aplicativo/aplicativoNuevo/composer.json
          jq ".version = \"$new_version\"" aplicativo/aplicativoNuevo/composer.json > temp.json
          mv temp.json aplicativo/aplicativoNuevo/composer.json
          git add aplicativo/aplicativoNuevo/composer.json
          git commit -m "Updated version to $new_version"
          git pull origin develop --rebase
          git push origin develop
          echo "Changes committed and pushed to develop"
          az ad sp show --id <principal-id>

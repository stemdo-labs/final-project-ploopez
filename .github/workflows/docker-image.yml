name: Docker Image CI

on: 
  #ci
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - reopened
    branches: 
      - main
      - develop
    paths:
      - 'aplicativo/aplicativoNuevo/**'
  push:
    branches:
      - develop
    paths:
      - 'aplicativo/aplicativoNuevo/**'
    
jobs:
  build:
    name: 'Build and Push to ACR'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Extract Version from composer.json
        id: get_version
        run: |
          VERSION=$(jq -r '.version' aplicativo/aplicativoNuevo/composer.json)
          if [ -z "$VERSION" ]; then
            echo "No se pudo obtener la versiÃ³n desde composer.json"
            exit 1
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Set Docker Tag
        id: set_tag
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            TAG=${{ env.VERSION }}
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            TAG=$(date +'%Y%m%d%H%M%S')
          fi
          echo "TAG=${TAG}" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        run: |
          docker build -t plopez/app-plopez:${{ env.TAG }} aplicativo/aplicativoNuevo/.
          docker tag plopez/app-plopez:${{ env.TAG }} acrplopezfp2.azurecr.io/app-plopez:${{ env.TAG }}
          az acr login --name acrplopezfp2
          docker push acrplopezfp2.azurecr.io/app-plopez:${{ env.TAG }}
